const entryCombat = ({ context: { bot } }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ COMBAT')

  bot.armorManager.equipAll() // –ë–æ—Ç –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –±—Ä–æ–Ω–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–æ—Ä–µ –Ω–∞–¥–µ–Ω–µ—Ç –µ—ë

  if (bot.movements) {
    bot.movements.allowSprinting = true // –†–∞–∑—Ä–µ—à–∞–µ–º –±–æ—Ç—É –±–µ–∂–∞—Ç—å        
  }
}

const entryDeciding = ({ context }) => {
  console.log('ü§î‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ DECIDING')
}

const entryFleeing = ({ context, event }) => {
  console.log('üèÉ –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FLEEING')
}

const entryDefenging = ({ context, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ DEFENDING')
}

const entryMeleeAttacking = ({ context: { bot, nearestEnemy }, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ MELEE_ATTACKING')
}

const entryRangedAttacking = ({ context: { bot, nearestEnemy }, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ RANGED_ATTACKING')
}

export default {
  entryCombat,
  entryDeciding,
  entryFleeing,
  entryDefenging,
  entryMeleeAttacking,
  entryRangedAttacking,
}