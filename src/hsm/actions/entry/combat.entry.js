import { assign } from "xstate"

const entryCombat = ({ context: { bot } }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ COMBAT')

  bot.armorManager.equipAll() // –ë–æ—Ç –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –±—Ä–æ–Ω–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–æ—Ä–µ –Ω–∞–¥–µ–Ω–µ—Ç –µ—ë

  if (bot.movements) {
    bot.movements.allowSprinting = true // –†–∞–∑—Ä–µ—à–∞–µ–º –±–æ—Ç—É –±–µ–∂–∞—Ç—å        
  }
}

const entryDeciding = ({ context }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ DECIDING')
}

const entryFleeing = ({ context, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FLEEING')
}

const entryDefenging = ({ context, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ DEFENDING')
}

const entryMeleeAttacking = ({ context: { bot, nearestEnemy }, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ MELEE_ATTACKING')
  const { entity } = nearestEnemy

  if (!entity || !entity?.isValid) {
    console.log('‚öîÔ∏è –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ –≤—Ä–∞–≥–∞ –¥–ª—è –∞—Ç–∞–∫–∏')
    return
  }

  const meleeWeapon = bot.utils.getMeleeWeapon() // –ø–æ–∏—Å–∫ –æ—Ä—É–∂–∏—è –º–µ—á/—Ç–æ–ø–æ—Ä
  if (!meleeWeapon) {
    console.log('‚ùå –ù–µ—Ç –æ—Ä—É–∂–∏—è!')
    return
  }

  console.log(`üó°Ô∏è –≠–∫–∏–ø–∏—Ä–æ–≤–∞–ª –æ—Ä—É–∂–∏–µ: ${meleeWeapon.name}`)
  bot.equip(meleeWeapon, 'hand')

  console.log(`‚öîÔ∏è –ê—Ç–∞–∫—É—é ${entity.name || entity.displayName}`)
  bot.pvp.attack(entity)
}

const entryRangedAttacking = ({ context: { bot, nearestEnemy }, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ RANGED_ATTACKING')
  const { entity } = nearestEnemy

  if (!entity || !entity?.isValid) {
    console.log('üèπ –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ –≤—Ä–∞–≥–∞ –¥–ª—è —Å—Ç—Ä–µ–ª—å–±—ã')
    return
  }

  console.log(`üèπ –ù–∞—á–∏–Ω–∞—é –¥–∞–ª—å–Ω–∏–π –±–æ–π —Å ${entity.name || entity.displayName}`)

  const weapon = bot.utils.getRangeWeapon() // –ø–æ–∏—Å–∫ –æ—Ä—É–∂–∏—è –ª—É–∫/–∞—Ä–±–∞–ª–µ—Ç
  const arrows = bot.utils.getArrow()

  if (weapon && arrows) {
    bot.equip(weapon, 'hand')
    console.log(`üèπ –≠–∫–∏–ø–∏—Ä–æ–≤–∞–ª: ${weapon.name}`)
    bot.utils.shoot({ entity, weapon })
  }
}

export default {
  entryCombat,
  entryDeciding,
  entryFleeing,
  entryDefenging,
  entryMeleeAttacking,
  entryRangedAttacking,
}