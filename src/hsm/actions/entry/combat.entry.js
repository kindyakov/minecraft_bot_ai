import { assign } from "xstate"
import { GoalFollow } from "../../../modules/plugins/goals.js";

const entryCombat = assign(({ context }) => {
  const bot = context.bot
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ COMBAT')

  bot.armorManager.equipAll() // –ë–æ—Ç –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –±—Ä–æ–Ω–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–æ—Ä–µ –Ω–∞–¥–µ–Ω–µ—Ç –µ—ë

  if (bot.movements) {
    bot.movements.allowSprinting = true // –†–∞–∑—Ä–µ—à–∞–µ–º –±–æ—Ç—É –±–µ–∂–∞—Ç—å        
  }

  return {
    combatContextChanged: false,
    nearestEnemy: null,
  }
})

const entryDeciding = assign(({ context }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ DECIDING')
  return {
    combatContextChanged: false
  }
})

const entryFleeing = ({ context, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FLEEING')

}

const entryDefenging = ({ context, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ DEFENDING')
}

const entryMeleeAttacking = ({ context: { bot, nearestEnemy }, event }) => {
  console.log('‚öîÔ∏è –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ MELEE_ATTACKING')
  const { entity = null } = nearestEnemy

  if (!entity || !entity?.isValid) {
    console.log('‚öîÔ∏è –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ –≤—Ä–∞–≥–∞ –¥–ª—è –∞—Ç–∞–∫–∏')
    return
  }

  const weapon = bot.utils.searchWeapons() // –ø–æ–∏—Å–∫ –æ—Ä—É–∂–∏—è –º–µ—á/—Ç–æ–ø–æ—Ä
  if (!weapon) {
    console.log('‚ùå –ù–µ—Ç –æ—Ä—É–∂–∏—è!')
    return
  }

  console.log(`üó°Ô∏è –≠–∫–∏–ø–∏—Ä–æ–≤–∞–ª –æ—Ä—É–∂–∏–µ: ${weapon.name}`)
  bot.equip(weapon, 'hand')

  console.log(`‚öîÔ∏è –ê—Ç–∞–∫—É—é ${entity.name || entity.displayName}`)
  bot.pvp.attack(entity)
}

const entryRangedAttacking = async ({ context: { bot, nearestEnemy }, event }) => {
  const { entity = null } = nearestEnemy

  if (!entity || !entity?.isValid) {
    console.log('üèπ –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ –≤—Ä–∞–≥–∞ –¥–ª—è —Å—Ç—Ä–µ–ª—å–±—ã')
    return
  }

  console.log(`üèπ –ù–∞—á–∏–Ω–∞—é –¥–∞–ª—å–Ω–∏–π –±–æ–π —Å ${entity.name || entity.displayName}`)

  // 1. –ò—â–µ–º –ª—É–∫/–∞—Ä–±–∞–ª–µ—Ç
  const rangedWeapon = bot.inventory.items().find(item =>
    item.name.includes('bow') || item.name.includes('crossbow')
  )

  if (rangedWeapon) {
    bot.equip(rangedWeapon, 'hand')
    console.log(`üèπ –≠–∫–∏–ø–∏—Ä–æ–≤–∞–ª: ${rangedWeapon.name}`)

    try {
      await bot.lookAt(entity.position, true) // –ü—Ä–∏—Ü–µ–ª–∏–≤–∞–µ–º—Å—è
      bot.activateItem() // –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Ç—è–≥–∏–≤–∞—Ç—å —Ç–µ—Ç–∏–≤—É

      // –í—Ä–µ–º—è –Ω–∞—Ç—è–∂–µ–Ω–∏—è (–¥–ª—è –ª—É–∫–∞ ~1000ms, –¥–ª—è –∞—Ä–±–∞–ª–µ—Ç–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —á–∞—Ä–æ–≤)
      const chargeTime = rangedWeapon.name.includes('crossbow') ? 1250 : 1000
      await new Promise(resolve => setTimeout(resolve, chargeTime))

      bot.deactivateItem() // –û—Ç–ø—É—Å–∫–∞–µ–º = –≤—ã—Å—Ç—Ä–µ–ª!
      console.log('üèπ –í—ã—Å—Ç—Ä–µ–ª–∏–ª!')
    } catch (error) {
      console.log(`üèπ –û—à–∏–±–∫–∞ —Å—Ç—Ä–µ–ª—å–±—ã: ${error.message}`)
    }
  } else {
    console.log('üèπ –ù–µ—Ç –¥–∞–ª—å–Ω–æ–±–æ–π–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è, –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ –±–ª–∏–∂–Ω–∏–π –±–æ–π')

    const weapon = bot.utils.searchWeapons()
    if (weapon) {
      bot.equip(weapon, 'hand')
      bot.pvp.attack(entity)
    }
  }
}

export default {
  entryCombat,
  entryDeciding,
  entryFleeing,
  entryDefenging,
  entryMeleeAttacking,
  entryRangedAttacking,
}