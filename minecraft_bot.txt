
Minecraft Bot — Полный контекст
===============================

1. Архитектура файлов
---------------------
minecraft-bot/
├── src/
│   ├── core/                   # базовые вещи
│   │   ├── bot.js              # класс MinecraftBot
│   │   ├── config.js           # dotenv, парсинг конфигов
│   │   ├── logger.js           # winston
│   │   └── utils.js            # общие утилиты
│   ├── modules/
│   │   ├── connection/         # создание/реконнект бота
│   │   │   └── index.js
│   │   ├── command_handler/    # обработка команд
│   │   │   ├── index.js        # регистрация/парсинг
│   │   │   └── commands/
│   │   │       ├── follow.js
│   │   │       ├── stop.js
│   │   │       └── ...
│   │   ├── controls/           # низкоуровневые действия
│   │   │   ├── movement.js     # pathfinder: ходьба, навигация
│   │   │   ├── interaction.js  # клик, place, attack
│   │   │   └── inventory.js    # работа с инвентарём
│   │   ├── states/             # FSM состояния
│   │   │   ├── idle.js         # ждать/периодические AI решения
│   │   │   ├── follow.js       # следовать
│   │   │   ├── guard.js        # охрана/защищать/выживание
│   │   │   ├── farm.js         # фермерство
│   │   │   ├── mine.js         # добыча ресурсов
│   │   │   └── build.js        # строительство
│   │   ├── ai/                 # AI адаптер
│   │   │   └── index.js        # вызовы API + schema validation
│   │   ├── scheduler/          # планировщик задач
│   │   │   └── index.js
│   │   └── utils/              # локальные хелперы
│   │       └── index.js
│   ├── tests/                  # unit/integration тесты
│   └── index.js                # точка входа
├── config/
│   └── .env.example
├── docs/
│   └── README.md
├── .eslintrc.js
├── .prettierrc.js
├── .gitignore
├── package.json
├── package-lock.json
└── nodemon.json

2. Основные зависимости
-----------------------
- mineflayer, mineflayer-pathfinder, mineflayer-collectblock — управление, навигация бота и колекция блоков
- dotenv — конфиги
- winston — логирование
- axios — вызовы внешних API (AI)
- ajv
- prettier

3. env.example
--------------
MINECRAFT_HOST=localhost
MINECRAFT_PORT=22222
MINECRAFT_USERNAME=bot
MINECRAFT_VERSION=1.20.1

AI_PROVIDER=openai
AI_MODEL=gpt-4o-mini
AI_API_KEY=sk-...
AI_TIMEOUT_MS=800
AI_MAX_TOKENS=300

4. Ключевые особенности:

Dependency Injection через конструкторы
FSM для управления поведением
Планировщик задач с приоритетами
AI только для высокоуровневых решений
Строгая валидация AI ответов через JSON Schema
Comprehensive логирование с correlation ID

5. Поведенческие состояния

IDLE - ожидание, периодические AI решения
FOLLOW - следование за игроком
GUARD - защита и выживание
FARM - автоматическое фермерство
MINE - добыча ресурсов
BUILD - строительство по планам

6. Безопасность

Белый список разрешенных действий
Лимиты времени выполнения задач
Валидация всех AI команд через JSON Schema
Fallback к базовым правилам при сбоях AI
Ограничения на опасные действия (лава, высота)